{
  "100": {
    "text": "Continue",
    "desc": "The client should continue with its request. This interim response is\nused to inform the client that the initial part of the request has been\nreceived and has not yet been rejected by the server. The client should\ncontinue by sending the remainder of the request or, if the request has\nalready been completed, ignore this response. The server must send a\nfinal response after the request has been completed.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.1"
    ]
  },
  "101": {
    "text": "Switching Protocols",
    "desc": "The server understands and is willing to comply with the client's\nrequest, via the Upgrade message header field, for a change in the\napplication protocol being used on this connection. The server will\nswitch protocols to those defined by the response's Upgrade header field\nimmediately after the empty line which terminates the 101 response.\n\nThe protocol should be switched only when it is advantageous to do so.\nFor example, switching to a newer version of HTTP is advantageous over\nolder versions, and switching to a real-time, synchronous protocol might\nbe advantageous when delivering resources that use such features.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.2"
    ]
  },
  "200": {
    "text": "OK",
    "desc": "The request has succeeded. The information returned with the response is\ndependent on the method used in the request, for example:\n\nGET an entity corresponding to the requested resource is sent in the\nresponse;\n\nPOST an entity describing or containing the result of the action;\n\nHEAD the entity-header fields corresponding to the requested resource are\nsent in the response without any message-body\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1"
    ]
  },
  "201": {
    "text": "Created",
    "desc": "The request has been fulfilled and resulted in a new resource being\ncreated. The newly created resource can be referenced by the URI(s)\nreturned in the entity of the response, with the most specific URI for\nthe resource given by a Location header field. The response should\ninclude an entity containing a list of resource characteristics and\nlocation(s) from which the user or user agent can choose the one most\nappropriate. The entity format is specified by the media type given in\nthe Content-Type header field. The origin server must create the resource\nbefore returning the 201 status code. If the action cannot be carried out\nimmediately, the server should respond with 202 (Accepted) response\ninstead.\n\nA 201 response may contain an ETag response header field indicating the\ncurrent value of the entity tag for the requested variant just created.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.2"
    ]
  },
  "202": {
    "text": "Accepted",
    "desc": "The request has been accepted for processing, but the processing has not\nbeen completed. The request might or might not eventually be acted upon,\nas it might be disallowed when processing actually takes place. There is\nno facility for re-sending a status code from an asynchronous operation\nsuch as this.\n\nThe 202 response is intentionally non-committal. Its purpose is to allow\na server to accept a request for some other process (perhaps a\nbatch-oriented process that is only run once per day) without requiring\nthat the user agent's connection to the server persist until the process\nis completed. The entity returned with this response should include an\nindication of the request's current status and either a pointer to a\nstatus monitor or some estimate of when the user can expect the request\nto be fulfilled.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.3"
    ]
  },
  "203": {
    "text": "Non-Authoritative Information",
    "desc": "The returned metainformation in the entity-header is not the definitive\nset as available from the origin server, but is gathered from a local or\na third-party copy. The set presented may be a subset or superset of the\noriginal version. For example, including local annotation information\nabout the resource might result in a superset of the metainformation\nknown by the origin server. Use of this response code is not required and\nis only appropriate when the response would otherwise be 200 (OK).\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.4"
    ]
  },
  "204": {
    "text": "No Content",
    "desc": "The server has fulfilled the request but does not need to return an\nentity-body, and might want to return updated metainformation. The\nresponse may include new or updated metainformation in the form of\nentity-headers, which if present should be associated with the requested\nvariant.\n\nIf the client is a user agent, it should not change its document view\nfrom that which caused the request to be sent. This response is primarily\nintended to allow input for actions to take place without causing a\nchange to the user agent's active document view, although any new or\nupdated metainformation should be applied to the document currently in\nthe user agent's active view.\n\nThe 204 response must not include a message-body, and thus is always\nterminated by the first empty line after the header fields.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.5"
    ]
  },
  "205": {
    "text": "Reset Content",
    "desc": "The server has fulfilled the request and the user agent should reset the\ndocument view which caused the request to be sent. This response is\nprimarily intended to allow input for actions to take place via user\ninput, followed by a clearing of the form in which the input is given so\nthat the user can easily initiate another input action. The response must\nnot include an entity.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.6"
    ]
  },
  "206": {
    "text": "Partial Content",
    "desc": "The server has fulfilled the partial GET request for the resource. The\nrequest must have included a Range header field indicating the desired\nrange, and may have included an If-Range header field to make the request\nconditional.\n\nThe response must include the following header fields:\n\n- Either a Content-Range header field indicating the range included with\n  this response, or a multipart/byteranges Content-Type including\n  Content-Range fields for each part. If a Content-Length header field is\n  present in the response, its value must match the actual number of\n  octets transmitted in the message-body.\n- Date\n- ETag and/or Content-Location, if the header would have been sent in a\n  200 response to the same request\n- Expires, Cache-Control, and/or Vary, if the field-value might differ\n  from that sent in any previous response for the same variant\n\nIf the 206 response is the result of an If-Range request that used a\nstrong cache validator, the response should not include other\nentity-headers. If the response is the result of an If-Range request that\nused a weak validator, the response must not include other\nentity-headers; this prevents inconsistencies between cached\nentity-bodies and updated headers. Otherwise, the response must include\nall of the entity-headers that would have been returned with a\n200 (OK) response to the same request.\n\nA cache must not combine a 206 response with other previously cached\ncontent if the ETag or Last-Modified headers do not match exactly.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.7"
    ]
  },
  "300": {
    "text": "Multiple Choices",
    "desc": "The requested resource corresponds to any one of a set of\nrepresentations, each with its own specific location, and agent-driven\nnegotiation information is being provided so that the user can select a\npreferred representation and redirect its request to that location.\n\nUnless it was a HEAD request, the response should include an entity\ncontaining a list of resource characteristics and location(s) from which\nthe user or user agent can choose the one most appropriate. The entity\nformat is specified by the media type given in the Content- Type header\nfield. Depending upon the format and the capabilities of the user agent,\nselection of the most appropriate choice may be performed automatically.\nHowever, this specification does not define any standard for such\nautomatic selection.\n\nIf the server has a preferred choice of representation, it should include\nthe specific URI for that representation in the Location field; user\nagents may use the Location field value for automatic redirection. This\nresponse is cacheable unless indicated otherwise.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.1"
    ]
  },
  "301": {
    "text": "Moved Permanently",
    "desc": "The requested resource has been assigned a new permanent URI and any\nfuture references to this resource should use one of the returned URIs.\nThis response is cacheable unless indicated otherwise.\n\nThe new permanent URI should be given by the Location field in the\nresponse. Unless the request method was HEAD, the entity of the response\nshould contain a short hypertext note with a hyperlink to the new URI(s).\n\nIf the 301 status code is received in response to a request other than\nGET or HEAD, the user agent must not automatically redirect the request\nunless it can be confirmed by the user, since this might change the\nconditions under which the request was issued.\n\nNote: When automatically redirecting a POST request after receiving a 301\n  status code, some existing HTTP/1.0 user agents will erroneously change\n  it into a GET request.\n\n301 redirects are recommended when redirecting sites or pages. This is\nbecause 302 redirects do not instruct search engine crawlers that a page or\nsite has permanently moved.\n",
    "refs": [
      "http://moz.com/learn/seo/http-status-codes",
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.2"
    ]
  },
  "302": {
    "text": "Found",
    "desc": "The requested resource resides temporarily under a different URI. Since\nthe redirection might be altered on occasion, the client should continue\nto use the URI for future requests. This response is only\ncacheable if indicated by a Cache-Control or Expires header field.\n\nThe temporary URI should be given by the Location field in the response.\nUnless the request method was HEAD, the entity of the response should\ncontain a short hypertext note with a hyperlink to the new URI(s).\n\nIf the 302 status code is received in response to a request other than\nGET or HEAD, the user agent must not automatically redirect the request\nunless it can be confirmed by the user, since this might change the\nconditions under which the request was issued.\n\nThis code is similar to a 301 in that for a GET or HEAD request, it\nautomatically forwards the requestor to a different location, but you\nshouldn't use it to tell the Googlebot that a page or site has moved\nbecause Googlebot will continue to crawl and index the original location.\n\nNote: RFC 1945 and RFC 2068 specify that the client is not allowed to\n  change the method on the redirected request.  However, most existing\n  user agent implementations treat 302 as if it were a 303 response,\n  performing a GET on the Location field-value regardless of the original\n  request method. The status codes 303 and 307 have been added for\n  servers that wish to make unambiguously clear which kind of reaction is\n  expected of the client.\n",
    "refs": [
      "https://support.google.com/webmasters/answer/40132?hl=en",
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.3"
    ]
  },
  "303": {
    "text": "See Other",
    "desc": "The response to the request can be found under a different URI and should\nbe retrieved using a GET method on that resource. This method exists\nprimarily to allow the output of a POST-activated script to redirect the\nuser agent to a selected resource. The new URI is not a substitute\nreference for the originally requested resource. The 303 response must\nnot be cached, but the response to the second (redirected) request might\nbe cacheable.\n\nThe different URI should be given by the Location field in the response.\nUnless the request method was HEAD, the entity of the response should\ncontain a short hypertext note with a hyperlink to the new URI(s).\n\nNote: Many pre-HTTP/1.1 user agents do not understand the 303 status.\n  When interoperability with such clients is a concern, the 302 status\n  code may be used instead, since most user agents react to a 302\n  response as described here for 303.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.4"
    ]
  },
  "304": {
    "text": "Not Modified",
    "desc": "If the client has performed a conditional GET request and access is\nallowed, but the document has not been modified, the server should\nrespond with this status code. The 304 response must not contain a\nmessage-body, and thus is always terminated by the first empty line after\nthe header fields.\n\nThe response must include the following header fields:\n\n- Date, unless its omission is required\n  If a clockless origin server obeys these rules, and proxies and clients\n  add their own Date to any response received without one (as already\n  specified by [RFC 2068], section 14.19), caches will operate correctly.\n\n- ETag and/or Content-Location, if the header would have been sent in a\n  200 response to the same request\n- Expires, Cache-Control, and/or Vary, if the field-value might differ\n  from that sent in any previous response for the same variant\n\nIf the conditional GET used a strong cache validator the response should\nnot include other entity-headers. Otherwise (i.e., the conditional GET\nused a weak validator), the response must not include other\nentity-headers; this prevents inconsistencies between cached\nentity-bodies and updated headers.\n\nIf a 304 response indicates an entity not currently cached, then the\ncache must disregard the response and repeat the request without the\nconditional.\n\nIf a cache uses a received 304 response to update a cache entry, the\ncache must update the entry to reflect any new field values given in the\nresponse.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.5"
    ]
  },
  "305": {
    "text": "Use Proxy",
    "desc": "The requested resource must be accessed through the proxy given by the\nLocation field. The Location field gives the URI of the proxy. The\nrecipient is expected to repeat this single request via the proxy. 305\nresponses must only be generated by origin servers.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.6"
    ]
  },
  "307": {
    "text": "Temporary Redirect",
    "desc": "The requested resource resides temporarily under a different URI. Since\nthe redirection may be altered on occasion, the client should continue to\nuse the URI for future requests. This response is only cacheable\nif indicated by a Cache-Control or Expires header field.\n\nThe temporary URI should be given by the Location field in the response.\nUnless the request method was HEAD, the entity of the response should\ncontain a short hypertext note with a hyperlink to the new URI(s) , since\nmany pre-HTTP/1.1 user agents do not understand the 307 status.\nTherefore, the note should contain the information necessary for a user\nto repeat the original request on the new URI.\n\nIf the 307 status code is received in response to a request other than\nGET or HEAD, the user agent must not automatically redirect the request\nunless it can be confirmed by the user, since this might change the\nconditions under which the request was issued.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.8"
    ]
  },
  "308": {
    "text": "Permanent Redirect",
    "desc": "The request, and all future requests should be repeated using another URI.\nIt parallels the behaviour of 301, but doesn’t allow the HTTP method to\nchange. So, for example, submitting a form to a permanently redirected\nresource may continue smoothly.\n",
    "refs": [
      "https://tools.ietf.org/html/rfc7538#section-3",
      "http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#3xx_Redirection"
    ]
  },
  "400": {
    "text": "Bad Request",
    "desc": "The request could not be understood by the server due to malformed\nsyntax. The client should not repeat the request without modifications.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1"
    ]
  },
  "401": {
    "text": "Unauthorized",
    "desc": "The request requires user authentication. The response must include a\nWWW-Authenticate header field containing a challenge applicable to the\nrequested resource. The client may repeat the request with a suitable\nAuthorization header field. If the request already included Authorization\ncredentials, then the 401 response indicates that authorization has been\nrefused for those credentials. If the 401 response contains the same\nchallenge as the prior response, and the user agent has already attempted\nauthentication at least once, then the user should be presented the\nentity that was given in the response, since that entity might include\nrelevant diagnostic information.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2"
    ]
  },
  "402": {
    "text": "Payment Required",
    "desc": "This code is reserved for future use.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.3"
    ]
  },
  "403": {
    "text": "Forbidden",
    "desc": "The server understood the request, but is refusing to fulfill it.\nAuthorization will not help and the request should not be repeated. If\nthe request method was not HEAD and the server wishes to make public why\nthe request has not been fulfilled, it should describe the reason for the\nrefusal in the entity. If the server does not wish to make this\ninformation available to the client, the status code 404 (Not Found) can\nbe used instead.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4"
    ]
  },
  "404": {
    "text": "Not Found",
    "desc": "The server has not found anything matching the URI. No indication\nis given of whether the condition is temporary or permanent. The 410\n(Gone) status code should be used if the server knows, through some\ninternally configurable mechanism, that an old resource is permanently\nunavailable and has no forwarding address. This status code is commonly\nused when the server does not wish to reveal exactly why the request has\nbeen refused, or when no other response is applicable.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5"
    ]
  },
  "405": {
    "text": "Method Not Allowed",
    "desc": "The method specified is not allowed for the resource identified by the URI.\nThe response must include an Allow header containing a list of valid\nmethods for the requested resource.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.6"
    ]
  },
  "406": {
    "text": "Not Acceptable",
    "desc": "The resource identified by the request is only capable of generating\nresponse entities which have content characteristics not acceptable\naccording to the accept headers sent in the request.\n\nUnless it was a HEAD request, the response should include an entity\ncontaining a list of available entity characteristics and location(s)\nfrom which the user or user agent can choose the one most appropriate.\nThe entity format is specified by the media type given in the\nContent-Type header field. Depending upon the format and the capabilities\nof the user agent, selection of the most appropriate choice may be\nperformed automatically. However, this specification does not define any\nstandard for such automatic selection.\n\nNote: HTTP/1.1 servers are allowed to return responses which are not\n  acceptable according to the accept headers sent in the request. In some\n  cases, this may even be preferable to sending a 406 response. User\n  agents are encouraged to inspect the headers of an incoming response to\n  determine if it is acceptable.\n\nIf the response could be unacceptable, a user agent should temporarily\nstop receipt of more data and query the user for a decision on further\nactions.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7"
    ]
  },
  "407": {
    "text": "Proxy Authentication Required",
    "desc": "This code is similar to 401 (Unauthorized), but indicates that the client\nmust first authenticate itself with the proxy. The proxy must return a\nProxy-Authenticate header field containing a challenge applicable to the\nproxy for the requested resource. The client may repeat the request with\na suitable Proxy-Authorization header field.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.8"
    ]
  },
  "408": {
    "text": "Request Timeout",
    "desc": "The client did not produce a request within the time that the server was\nprepared to wait. The client may repeat the request without modifications\nat any later time.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.9"
    ]
  },
  "409": {
    "text": "Conflict",
    "desc": "The request could not be completed due to a conflict with the current\nstate of the resource. This code is only allowed in situations where it\nis expected that the user might be able to resolve the conflict and\nresubmit the request. The response body should include enough information\nfor the user to recognize the source of the conflict. Ideally, the\nresponse entity would include enough information for the user or user\nagent to fix the problem; however, that might not be possible and is not\nrequired.\n\nConflicts are most likely to occur in response to a PUT request. For\nexample, if versioning were being used and the entity being PUT included\nchanges to a resource which conflict with those made by an earlier\n(third-party) request, the server might use the 409 response to indicate\nthat it can't complete the request. In this case, the response entity\nwould likely contain a list of the differences between the two versions\nin a format defined by the response Content-Type.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.10"
    ]
  },
  "410": {
    "text": "Gone",
    "desc": "The requested resource is no longer available at the server and no\nforwarding address is known. This condition is expected to be considered\npermanent. Clients with link editing capabilities should delete\nreferences to the URI after user approval. If the server does not\nknow, or has no facility to determine, whether or not the condition is\npermanent, the status code 404 (Not Found) should be used instead. This\nresponse is cacheable unless indicated otherwise.\n\nThe 410 response is primarily intended to assist the task of web\nmaintenance by notifying the recipient that the resource is intentionally\nunavailable and that the server owners desire that remote links to that\nresource be removed. Such an event is common for limited-time,\npromotional services and for resources belonging to individuals no longer\nworking at the server's site. It is not necessary to mark all permanently\nunavailable resources as \"gone\" or to keep the mark for any length of\ntime -- that is left to the discretion of the server owner.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.11"
    ]
  },
  "411": {
    "text": "Length Required",
    "desc": "The server refuses to accept the request without a defined Content-\nLength. The client may repeat the request if it adds a valid\nContent-Length header field containing the length of the message-body in\nthe request message.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.12"
    ]
  },
  "412": {
    "text": "Precondition Failed",
    "desc": "The precondition given in one or more of the request-header fields\nevaluated to false when it was tested on the server. This response code\nallows the client to place preconditions on the current resource\nmetainformation (header field data) and thus prevent the requested method\nfrom being applied to a resource other than the one intended.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.13"
    ]
  },
  "413": {
    "text": "Request Entity Too Large",
    "desc": "The server is refusing to process a request because the request entity is\nlarger than the server is willing or able to process. The server may\nclose the connection to prevent the client from continuing the request.\n\nIf the condition is temporary, the server should include a Retry- After\nheader field to indicate that it is temporary and after what time the\nclient may try again.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.14"
    ]
  },
  "414": {
    "text": "Request-URI Too Long",
    "desc": "The server is refusing to service the request because the URI is\nlonger than the server is willing to interpret. This rare condition is\nonly likely to occur when a client has improperly converted a POST\nrequest to a GET request with long query information, when the client has\ndescended into a URI \"black hole\" of redirection (e.g., a redirected URI\nprefix that points to a suffix of itself), or when the server is under\nattack by a client attempting to exploit security holes present in some\nservers using fixed-length buffers for reading or manipulating the\nURI.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.15"
    ]
  },
  "415": {
    "text": "Unsupported Media Type",
    "desc": "The server is refusing to service the request because the entity of the\nrequest is in a format not supported by the requested resource for the\nrequested method.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.16"
    ]
  },
  "416": {
    "text": "Requested Range Not Satisfiable",
    "desc": "A server should return a response with this status code if a request\nincluded a Range request-header field, and none of the range-specifier\nvalues in this field overlap the current extent of the selected resource,\nand the request did not include an If-Range request-header field. (For\nbyte-ranges, this means that the first- byte-pos of all of the\nbyte-range-spec values were greater than the current length of the\nselected resource.)\n\nWhen this status code is returned for a byte-range request, the response\nshould include a Content-Range entity-header field specifying the current\nlength of the selected resource (see section 14.16). This response must\nnot use the multipart/byteranges content- type.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.17"
    ]
  },
  "417": {
    "text": "Expectation Failed",
    "desc": "The expectation given in an Expect request-header field could not be met\nby this server, or, if the server is a proxy, the server has unambiguous\nevidence that the request could not be met by the next-hop server.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.18"
    ]
  },
  "418": {
    "text": "I'm a teapot",
    "desc": "This code was defined in 1998 as one of the traditional IETF April Fools'\njokes, in RFC 2324, and is not expected to be implemented by actual HTTP\nservers. The RFC specifies this code should be returned by tea pots\nrequested to brew coffee.\n",
    "refs": [
      "https://www.ietf.org/rfc/rfc2324.txt",
      "http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error"
    ]
  },
  "419": {
    "text": "Authentication Timeout",
    "desc": "Not a part of the HTTP standard, 419 Authentication Timeout denotes that\npreviously valid authentication has expired. It is used as an alternative\nto 401 Unauthorized in order to differentiate from otherwise authenticated\nclients being denied access to specific server resources.\n",
    "refs": [
      "http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error"
    ]
  },
  "420": {
    "text": "Method Failure",
    "desc": "Not part of the HTTP standard, but defined by Spring in the HttpStatus\nclass to be used when a method failed. This status code is deprecated by\nSpring.\n\nIt is also returned by version 1 of the Twitter Search and Trends API when\nthe client is being rate limited. Other services may wish to implement the\n429 Too Many Requests response code instead.\n",
    "refs": [
      "http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error"
    ]
  },
  "422": {
    "text": "Unprocessable Entity",
    "desc": "The request was well-formed but was unable to be followed due to semantic\nerrors. (extension for WebDAV)\n",
    "refs": [
      "https://tools.ietf.org/html/rfc4918#section-11.2",
      "http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error"
    ]
  },
  "423": {
    "text": "Locked",
    "desc": "The 423 (Locked) status code means the source or destination resource of a\nmethod is locked.  This response should contain an appropriate precondition\nor postcondition code, such as 'lock-token-submitted' or\n'no-conflicting-lock'. (extension for WebDAV)\n",
    "refs": [
      "https://tools.ietf.org/html/rfc4918#section-11.3"
    ]
  },
  "426": {
    "text": "Upgrade Required",
    "desc": "The client should switch to a different protocol such as TLS/1.0, given in\nthe Upgrade header field.\n",
    "refs": [
      "http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error"
    ]
  },
  "428": {
    "text": "Precondition Required",
    "desc": "The 428 status code indicates that the origin server requires the request\nto be conditional.\n\nIts typical use is to avoid the \"lost update\" problem, where a client GETs\na resource's state, modifies it, and PUTs it back to the server, when\nmeanwhile a third party has modified the state on the server, leading to a\nconflict.  By requiring requests to be conditional, the server can assure\nthat clients are working with the correct copies.\n\nResponses using this status code should explain how to resubmit the request\nsuccessfully. For example:\n\n  HTTP/1.1 428 Precondition Required\n  Content-Type: text/html\n\n  <html>\n     <head>\n        <title>Precondition Required</title>\n     </head>\n     <body>\n        <h1>Precondition Required</h1>\n        <p>This request is required to be conditional;\n           try using \"If-Match\".</p>\n     </body>\n  </html>\n",
    "refs": [
      "http://tools.ietf.org/html/rfc6585#section-3"
    ]
  },
  "500": {
    "text": "Internal Server Error",
    "desc": "The server encountered an unexpected condition which prevented it from\nfulfilling the request.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1"
    ]
  },
  "501": {
    "text": "Not Implemented",
    "desc": "The server does not support the functionality required to fulfill the\nrequest. This is the appropriate response when the server does not\nrecognize the request method and is not capable of supporting it for any\nresource.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2"
    ]
  },
  "502": {
    "text": "Bad Gateway",
    "desc": "The server, while acting as a gateway or proxy, received an invalid\nresponse from the upstream server it accessed in attempting to fulfill\nthe request.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.3"
    ]
  },
  "503": {
    "text": "Service Unavailable",
    "desc": "The server is currently unable to handle the request due to a temporary\noverloading or maintenance of the server. The implication is that this is\na temporary condition which will be alleviated after some delay. If\nknown, the length of the delay may be indicated in a Retry-After header.\nIf no Retry-After is given, the client should handle the response as it\nwould for a 500 response.\n\nNote: The existence of the 503 status code does not imply that a server\n  must use it when becoming overloaded. Some servers may wish to simply\n  refuse the connection.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4"
    ]
  },
  "504": {
    "text": "Gateway Timeout",
    "desc": "The server, while acting as a gateway or proxy, did not receive a timely\nresponse from the upstream server specified by the URI (e.g. HTTP, FTP,\nLDAP) or some other auxiliary server (e.g. DNS) it needed to access in\nattempting to complete the request.\n\nNote: Note to implementors: some deployed proxies are known to return 400\n  or 500 when DNS lookups time out.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.5"
    ]
  },
  "505": {
    "text": "HTTP Version Not Supported",
    "desc": "The server does not support, or refuses to support, the HTTP protocol\nversion that was used in the request message. The server is indicating\nthat it is unable or unwilling to complete the request using the same\nmajor version as the client, other than with this error message. The\nresponse should contain an entity describing why that version is not\nsupported and what other protocols are supported by that server.\n",
    "refs": [
      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.6"
    ]
  }
}
